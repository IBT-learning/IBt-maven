pipeline{
    agent any
    tools {
        maven 'maven_3.9.3'
    }
    stages {
        stage('Github checkout'){
            steps{
                git branch: 'April2024_Isaac', changelog: false, credentialsId: 'ibt', poll: false, url: 'https://github.com/IBT-learning/ibt-maven.git'
            }
        }
        stage('validate'){
            steps{
                withMaven(maven: 'maven_3.8') {
                    sh   '''
                         mvn --version
                         mvn validate
                         '''
                }
            }
        }
        stage('compile'){
            steps{
                 sh   '''
                        mvn --version
                        mvn compile
                      '''
            }
        }
        stage('test'){
             steps{
                    sh 'mvn test'
            }
        }
        stage('Sonarqube Scan'){
             environment {
                scannerHome = tool 'ibt-sonarqube'
             }
             steps{
                 withSonarQubeEnv(credentialsId: 'student-sonar-token', installationName: 'IBT sonarqube') {
                     sh '${scannerHome}/bin/sonar-scanner'
                 }
             }
        }
        stage('package'){
             steps{
                    sh 'mvn package'
             }
        }

        stage('Dependency-check scan'){
                steps{
                    dependencyCheck additionalArguments: '''
                        -o "./"
                        -s "./"
                        -f "ALL"
                        --prettyPrint ''', odcInstallation: 'dependency-check'
                     dependencyCheckPublisher pattern: 'dependency-check-report.xml'
                }
            }

        stage('deploy'){
            steps{
            withMaven(maven: 'maven_3.9.3', mavenSettingsConfig: 'artifactory-settings') {
                    sh 'mvn deploy'
            }
        }
    }
        stage('deploy using cred'){
            steps{
                 withCredentials([file(credentialsId: 'mvn_setting_isaac', variable: 'mvn_settings_isaac')]) {
                 sh 'mvn deploy -s $mvn_settings_isaac'
            }
        }
    }
        stage ('deploy using managed'){
            steps{
                configFileProvider([configFile(fileId: 'artifactory-settings', targetLocation: 'mvn_settings_managed', variable: 'mvn_settings_managed')]) {
                    sh 'mvn deploy -s $mvn_settings_managed'
                }
            }
        }
        stage('Deploy to Dev'){
            steps{
                script{
                    def remote = [name: 'dev', host: '143.198.1.185', allowAnyHosts: true]
                    withCredentials([usernamePassword(credentialsId: 'jenkins_-agent-cred1', passwordVariable: 'password', usernameVariable: 'user')]) {
                        remote.user = user
                        remote.password = password
                       sshPut remote: remote, from: 'target/ibt-maven-8.0-SNAPSHOT.jar' , into: '/opt/tomcat/apps'
                    }
                }
            }
        }
   } //stages
} //pipeline